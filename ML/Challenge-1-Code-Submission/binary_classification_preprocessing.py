# -*- coding: utf-8 -*-
"""Test-Image-Processing-Challenge-1.ipynb

Automatically generated by Colaboratory.

Original file is located at 
    https://colab.research.google.com/
"""

import numpy as np 
import pandas as pd 
import cv2
from matplotlib import pyplot as plt
import matplotlib.image as mpimg
from PIL import Image
import sys
import os
import glob
from google.colab import drive
from google.colab.patches import cv2_imshow
np.set_printoptions(threshold=sys.maxsize)

## Mounting drive
drive.mount("/content/drive", force_remount=True)

def hair_removal(input_img):

  ## Image Smoothing
  smooth_img = cv2.GaussianBlur(input_img, (3,3), cv2.BORDER_DEFAULT)
  
  sum_img = np.zeros((input_img.shape))
  ## Multiple Black Hat
  for mm in range(1,11,2):
    # Defining the kernel to be used in Black-Hat
    filterSize =(mm, mm)
    kernel = cv2.getStructuringElement(cv2.MORPH_ELLIPSE, filterSize)
    # Applying the Black-Hat operation
    black_hat_img = cv2.morphologyEx(smooth_img, cv2.MORPH_BLACKHAT, kernel)
    sum_img = sum_img + black_hat_img

  ## Normalize the image
  norm_img = cv2.normalize(sum_img, sum_img, 0, 255, cv2.NORM_MINMAX)
  norm_img = np.uint8(norm_img)
  
  ## New Otsu Thresholding
  thresh, otsu_img = cv2.threshold(norm_img, 0, 255, cv2.THRESH_BINARY + cv2.THRESH_OTSU)

  ## Closing to remove dots
  kernel = np.ones((7,7),np.uint8)
  close_img = cv2.morphologyEx(otsu_img, cv2.MORPH_CLOSE, kernel)

  ## inpainting
  inpaint_img = cv2.inpaint(input_img, close_img, 7, flags=cv2.INPAINT_TELEA)

  # CLAHE
  # clahe = cv2.createCLAHE(clipLimit = 2)
  # clahe_img = clahe.apply(inpaint_img) 

  ## New Otsu Thresholding
  thresh, final_otsu_img = cv2.threshold(inpaint_img, 0, 255, cv2.THRESH_BINARY + cv2.THRESH_OTSU)

  out_img = np.invert(final_otsu_img)

  return out_img

lesion_type = "xx"

data_file = "/content/drive/My Drive/CAD/Challenge 1/test/*.jpg"

i = 0

for filename in glob.glob(data_file):

  #print(filename)
  img = cv2.imread(filename)

  ## Converting to gray scale
  img_gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)

  final_img = hair_removal(img_gray)

  name = filename[-10:]
  print(name)
  print("Writing image {0}.......".format(name))
  """
    plt.figure()
    plt.axis('off')
    plt.imshow(final_img, cmap = 'gray')
  """

  cv2.imwrite("/content/drive/My Drive/CAD/Challenge 1/{0}_seg/s_{1}".format(lesion_type, name), final_img)

  i = i+1

# train/les/